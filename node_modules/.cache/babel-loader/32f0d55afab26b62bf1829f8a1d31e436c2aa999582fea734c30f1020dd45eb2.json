{"ast":null,"code":"const express = require('express');\nconst router = express.Router();\nconst db = require('../dbConnection');\n\n// Recupera tutti i servizi\nrouter.get('/', (req, res) => {\n  const query = 'SELECT * FROM servizi';\n  db.query(query, (err, results) => {\n    if (err) {\n      console.error('Errore nel recupero dei servizi:', err);\n      return res.status(500).json({\n        error: 'Errore nel recupero dei servizi'\n      });\n    }\n    res.json(results);\n  });\n});\n\n// Aggiungi un nuovo servizio\nrouter.post('/', (req, res) => {\n  const {\n    titolo,\n    descrizione,\n    prezzo,\n    durata,\n    immagine_url\n  } = req.body;\n  const query = 'INSERT INTO servizi (titolo, descrizione, prezzo, durata, immagine_url) VALUES (?, ?, ?, ?, ?)';\n  db.query(query, [titolo, descrizione, prezzo, durata, immagine_url], (err, result) => {\n    if (err) {\n      console.error('Errore nell\\'aggiunta del servizio:', err);\n      return res.status(500).json({\n        error: 'Errore nell\\'aggiunta del servizio'\n      });\n    }\n    res.json({\n      message: 'Servizio aggiunto con successo',\n      id: result.insertId\n    });\n  });\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","db","get","req","res","query","err","results","console","error","status","json","post","titolo","descrizione","prezzo","durata","immagine_url","body","result","message","id","insertId","module","exports"],"sources":["C:/Users/tnigh/Desktop/MAMMA/beauty-armony-academy/src/pages/Servizi.js"],"sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst db = require('../dbConnection');\r\n\r\n// Recupera tutti i servizi\r\nrouter.get('/', (req, res) => {\r\n  const query = 'SELECT * FROM servizi';\r\n  db.query(query, (err, results) => {\r\n    if (err) {\r\n      console.error('Errore nel recupero dei servizi:', err);\r\n      return res.status(500).json({ error: 'Errore nel recupero dei servizi' });\r\n    }\r\n    res.json(results);\r\n  });\r\n});\r\n\r\n// Aggiungi un nuovo servizio\r\nrouter.post('/', (req, res) => {\r\n  const { titolo, descrizione, prezzo, durata, immagine_url } = req.body;\r\n  const query = 'INSERT INTO servizi (titolo, descrizione, prezzo, durata, immagine_url) VALUES (?, ?, ?, ?, ?)';\r\n  db.query(query, [titolo, descrizione, prezzo, durata, immagine_url], (err, result) => {\r\n    if (err) {\r\n      console.error('Errore nell\\'aggiunta del servizio:', err);\r\n      return res.status(500).json({ error: 'Errore nell\\'aggiunta del servizio' });\r\n    }\r\n    res.json({ message: 'Servizio aggiunto con successo', id: result.insertId });\r\n  });\r\n});\r\n\r\nmodule.exports = router;\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAMC,EAAE,GAAGH,OAAO,CAAC,iBAAiB,CAAC;;AAErC;AACAC,MAAM,CAACG,GAAG,CAAC,GAAG,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAC5B,MAAMC,KAAK,GAAG,uBAAuB;EACrCJ,EAAE,CAACI,KAAK,CAACA,KAAK,EAAE,CAACC,GAAG,EAAEC,OAAO,KAAK;IAChC,IAAID,GAAG,EAAE;MACPE,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEH,GAAG,CAAC;MACtD,OAAOF,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEF,KAAK,EAAE;MAAkC,CAAC,CAAC;IAC3E;IACAL,GAAG,CAACO,IAAI,CAACJ,OAAO,CAAC;EACnB,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACAR,MAAM,CAACa,IAAI,CAAC,GAAG,EAAE,CAACT,GAAG,EAAEC,GAAG,KAAK;EAC7B,MAAM;IAAES,MAAM;IAAEC,WAAW;IAAEC,MAAM;IAAEC,MAAM;IAAEC;EAAa,CAAC,GAAGd,GAAG,CAACe,IAAI;EACtE,MAAMb,KAAK,GAAG,gGAAgG;EAC9GJ,EAAE,CAACI,KAAK,CAACA,KAAK,EAAE,CAACQ,MAAM,EAAEC,WAAW,EAAEC,MAAM,EAAEC,MAAM,EAAEC,YAAY,CAAC,EAAE,CAACX,GAAG,EAAEa,MAAM,KAAK;IACpF,IAAIb,GAAG,EAAE;MACPE,OAAO,CAACC,KAAK,CAAC,qCAAqC,EAAEH,GAAG,CAAC;MACzD,OAAOF,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEF,KAAK,EAAE;MAAqC,CAAC,CAAC;IAC9E;IACAL,GAAG,CAACO,IAAI,CAAC;MAAES,OAAO,EAAE,gCAAgC;MAAEC,EAAE,EAAEF,MAAM,CAACG;IAAS,CAAC,CAAC;EAC9E,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFC,MAAM,CAACC,OAAO,GAAGzB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}